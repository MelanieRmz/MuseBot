import OpenAI from 'openai';

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
const xAi = new OpenAI({
    apiKey: process.env.GROK_API_KEY,
    baseURL: "https://api.x.ai/v1",
});

const masterPrompt = (hashtags: string[], keywords: string[], spiceWords: string[]) => `
Create a visually striking and humorous meme-style image optimized to grab attention and inspire shares on social media. The image should be clear, relatable, funny, quirky, or surprisingâ€”designed to resonate strongly with trending topics.

Incorporate visual elements, situations, or references explicitly associated with the following:
- **Hashtags**: ${hashtags.join(', ')}
- **Custom keywords**: ${keywords.join(', ')}
- **Spice words**: ${spiceWords.join(', ')} (use these slang or viral terms to enhance humor, relatability, or punchlines)

The overall style should be vibrant, engaging, and highly shareable, with easy-to-read text (if used) and immediately understandable context. Aim for broad appeal and maximum virality potential.
`
async function generateOpenAIImage(hashtags: string[], keywords: string[], spiceWords: string[]): Promise<string[] | undefined> {
    const prompt = masterPrompt(hashtags, keywords, spiceWords);

    try {
        console.log('Generating OpenAI image with prompt:', prompt);
        const response = await openai.images.generate({
            model: "dall-e-3",
            prompt: prompt,
            n: 3,
            size: "1024x1024"
        });
        if (!response.data || response.data.length === 0) {
            console.error('No image generated by OpenAI:', response);
            return undefined;
        }
        const images = response.data?.map(image => image.url!);
        return images;
    } catch (error) {
        console.error('Error generating OpenAI image:', error);
        return undefined;
    }
}

async function generateXAIImage(hashtags: string[], keywords: string[], spiceWords: string[]): Promise<string[] | undefined> {
    const prompt = masterPrompt(hashtags, keywords, spiceWords);

    try {
        console.log('Generating xAi image with prompt:', prompt);
        const response = await xAi.images.generate({
            model: "grok-2-image-1212",
            prompt: prompt,
            n: 3,
            // size: "1024x1024"
        });
        if (!response.data || response.data.length === 0) {
            console.error('No image generated by OpenAI:', response);
            return undefined;
        }
        const images = response.data?.map(image => image.url!);
        return images;
    } catch (error) {
        console.error('Error generating xAi image:', error);
        return undefined;
    }
}


export { generateOpenAIImage, generateXAIImage };
